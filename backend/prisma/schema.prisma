generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EmployeeRange {
  RANGE_1_10
  RANGE_10_50
  RANGE_50_100
  RANGE_100_PLUS
}


model Tenant {
  id   String         @id @default(uuid())
  name String @unique
  normalizedName String @unique
  isVerified Boolean
  employeeRange EmployeeRange?
  businessType            String?
  address                 String?
  employees Employee[]
  projects Project[]
}

model Employee {
   id                      String    @id @default(uuid())
   fullname                String
   email                   String    @unique
   password                String
   role                    String    @default("employee")
   invitationLink   String?
   invitationLinkExpireTime DateTime?
   isVerified Boolean @default(false)
   forgotPasswordOtp String?
   forgotPasswordExpiry DateTime?
   isOtpVerified Boolean @default(false)
   passwordResetToken String?
   passwordResetTokenExpiry DateTime?
   isNewLetterSubscribed Boolean @default(false)
   tenantId String?
   tenant Tenant? @relation(fields: [tenantId], references: [id])
   projects Project[]
  projectAssigned Project[] @relation("ProjectAssignment")
}
 
model Project {
    id               String     @id @default(uuid())
    name             String
    icon             String?
    createdAt DateTime @default(now())
    dueDate          DateTime?
    description      String?
    attachment       String?
    createdBy       String
    employee         Employee   @relation(fields: [createdBy], references: [id])
    tenantId String
    tenant Tenant? @relation(fields: [tenantId], references: [id])
    assignToEmployee Employee[] @relation("ProjectAssignment")
}
